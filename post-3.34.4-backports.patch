From 053bb5901abc40e1ffea7ec38b8192b05e78b007 Mon Sep 17 00:00:00 2001
From: Yi-Jyun Pan <pan93412@gmail.com>
Date: Wed, 19 Feb 2020 03:08:50 +0000
Subject: [PATCH 1/7] Update Chinese (Taiwan) translation

---
 po/zh_TW.po | 160 +++++++++++++++++++++++++++++++++-------------------
 1 file changed, 102 insertions(+), 58 deletions(-)

diff --git a/po/zh_TW.po b/po/zh_TW.po
index c1fe7b0ba..ac1d9b3ea 100644
--- a/po/zh_TW.po
+++ b/po/zh_TW.po
@@ -10,8 +10,8 @@ msgid ""
 msgstr ""
 "Project-Id-Version: metacity 3.3.4\n"
 "Report-Msgid-Bugs-To: https://gitlab.gnome.org/GNOME/mutter/issues\n"
-"POT-Creation-Date: 2019-02-04 17:52+0000\n"
-"PO-Revision-Date: 2019-02-17 23:15+0800\n"
+"POT-Creation-Date: 2019-11-21 15:22+0000\n"
+"PO-Revision-Date: 2019-11-23 13:58+0800\n"
 "Last-Translator: pan93412 <pan93412@gmail.com>\n"
 "Language-Team: Chinese <zh-l10n@linux.org.tw>\n"
 "Language: zh_TW\n"
@@ -19,7 +19,7 @@ msgstr ""
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=1; plural=0;\n"
-"X-Generator: Lokalize 18.12.2\n"
+"X-Generator: Lokalize 19.11.80\n"
 
 #: data/50-mutter-navigation.xml:6
 msgid "Navigation"
@@ -371,6 +371,16 @@ msgid "Enable experimental features"
 msgstr "啟用試驗性功能"
 
 #: data/org.gnome.mutter.gschema.xml.in:108
+#| msgid ""
+#| "To enable experimental features, add the feature keyword to the list. "
+#| "Whether the feature requires restarting the compositor depends on the "
+#| "given feature. Any experimental feature is not required to still be "
+#| "available, or configurable. Don’t expect adding anything in this setting "
+#| "to be future proof. Currently possible keywords: • “scale-monitor-"
+#| "framebuffer” — makes mutter default to layout logical monitors in a "
+#| "logical pixel coordinate space, while scaling monitor framebuffers "
+#| "instead of window content, to manage HiDPI monitors. Does not require a "
+#| "restart."
 msgid ""
 "To enable experimental features, add the feature keyword to the list. "
 "Whether the feature requires restarting the compositor depends on the given "
@@ -379,27 +389,41 @@ msgid ""
 "proof. Currently possible keywords: • “scale-monitor-framebuffer” — makes "
 "mutter default to layout logical monitors in a logical pixel coordinate "
 "space, while scaling monitor framebuffers instead of window content, to "
-"manage HiDPI monitors. Does not require a restart."
+"manage HiDPI monitors. Does not require a restart. • “rt-scheduler” — makes "
+"mutter request a low priority real-time scheduling. The executable or user "
+"must have CAP_SYS_NICE. Requires a restart. • “autostart-xwayland” — "
+"initializes Xwayland lazily if there are X11 clients. Requires restart."
 msgstr ""
 "若要啟用實驗性功能，請將功能關鍵字加入列表中。置於該功能是否須要重新啟動混成"
 "器則視給予的功能而定。任何實驗性功能不一定能用、或是可以調整設定。請不要預期"
-"在此設定中加入的任何東西未來都能存在。目前可用的關鍵字有： • “scale-monitor-"
-"framebuffer” — 讓 mutter 預設採用邏輯像素座標空間的配置邏輯螢幕，而縮放螢幕 "
-"framebuffer 則取代視窗內容以管理 HiDPI 螢幕。不須要重新啟動。"
-
-#: data/org.gnome.mutter.gschema.xml.in:141
+"在此設定中加入的任何東西未來都能存在。目前可用的關鍵字有："
+"• 「scale-monitor-framebuffer」— 讓 mutter 預設採用邏輯像素座標空間的"
+"配置邏輯螢幕，而縮放螢幕 framebuffer 則取代視窗內容以管理 HiDPI 螢幕。不需要重新啟動。"
+"• 「rt-scheduler」— 讓 mutter 請求低優先級的即時排程。可執行檔或使用者必須要有"
+"CAP_SYS_NICE。需要重新啟動。"
+"• 「autostart-xwayland」— 如果有 X11 用戶端就延遲初始化 Xwayland。需要重新啟動。"
+
+#: data/org.gnome.mutter.gschema.xml.in:134
+msgid "Modifier to use to locate the pointer"
+msgstr "要用來定位指標的輔助鍵"
+
+#: data/org.gnome.mutter.gschema.xml.in:135
+msgid "This key will initiate the “locate pointer” action."
+msgstr "這個按鍵將會「定位指標」。"
+
+#: data/org.gnome.mutter.gschema.xml.in:155
 msgid "Select window from tab popup"
 msgstr "從分頁彈出項選擇視窗"
 
-#: data/org.gnome.mutter.gschema.xml.in:146
+#: data/org.gnome.mutter.gschema.xml.in:160
 msgid "Cancel tab popup"
 msgstr "取消分頁彈出項"
 
-#: data/org.gnome.mutter.gschema.xml.in:151
+#: data/org.gnome.mutter.gschema.xml.in:165
 msgid "Switch monitor configurations"
 msgstr "切換螢幕組態"
 
-#: data/org.gnome.mutter.gschema.xml.in:156
+#: data/org.gnome.mutter.gschema.xml.in:170
 msgid "Rotates the built-in monitor configuration"
 msgstr "旋轉切換內建螢幕組態"
 
@@ -456,26 +480,38 @@ msgid "Re-enable shortcuts"
 msgstr "重新啟用快捷鍵"
 
 #: data/org.gnome.mutter.wayland.gschema.xml.in:64
-msgid "Allow grabs with Xwayland"
-msgstr "在 Xwayland 允許抓取"
+#| msgid "Allow grabs with Xwayland"
+msgid "Allow X11 grabs to lock keyboard focus with Xwayland"
+msgstr "允許 X11 抓取以使用 Xwayland 鎖定鍵盤焦點"
 
 #: data/org.gnome.mutter.wayland.gschema.xml.in:65
+#, fuzzy
+#| msgid ""
+#| "Allow keyboard grabs issued by X11 applications running in Xwayland to be "
+#| "taken into account. For a X11 grab to be taken into account under "
+#| "Wayland, the client must also either send a specific X11 ClientMessage to "
+#| "the root window or be among the applications white-listed in key "
+#| "“xwayland-grab-access-rules”."
 msgid ""
-"Allow keyboard grabs issued by X11 applications running in Xwayland to be "
-"taken into account. For a X11 grab to be taken into account under Wayland, "
-"the client must also either send a specific X11 ClientMessage to the root "
-"window or be among the applications white-listed in key “xwayland-grab-"
-"access-rules”."
+"Allow all keyboard events to be routed to X11 “override redirect” windows "
+"with a grab when running in Xwayland. This option is to support X11 clients "
+"which map an “override redirect” window (which do not receive keyboard "
+"focus) and issue a keyboard grab to force all keyboard events to that "
+"window. This option is seldom used and has no effect on regular X11 windows "
+"which can receive keyboard focus under normal circumstances. For a X11 grab "
+"to be taken into account under Wayland, the client must also either send a "
+"specific X11 ClientMessage to the root window or be among the applications "
+"white-listed in key “xwayland-grab-access-rules”."
 msgstr ""
 "考慮到在 Xwayland 中執行的 X11 應用程序發出的鍵盤抓取。對於在 Wayland 下考慮"
 "的 X11 抓取，客戶端也必須送出一個特定的 X11 ClientMessage 到 root 視窗或者在 "
-"xwayland-grab-access-rules 鍵白名單其中的應用程式。"
+"xwayland-grab-access-rules 鍵白名單其中的應用程式"
 
-#: data/org.gnome.mutter.wayland.gschema.xml.in:77
+#: data/org.gnome.mutter.wayland.gschema.xml.in:84
 msgid "Xwayland applications allowed to issue keyboard grabs"
 msgstr "Xwayland 應用程式允許發出鍵盤抓取"
 
-#: data/org.gnome.mutter.wayland.gschema.xml.in:78
+#: data/org.gnome.mutter.wayland.gschema.xml.in:85
 msgid ""
 "List the resource names or resource class of X11 windows either allowed or "
 "not allowed to issue X11 keyboard grabs under Xwayland. The resource name or "
@@ -499,7 +535,7 @@ msgstr ""
 #. TRANSLATORS: This string refers to a button that switches between
 #. * different modes.
 #.
-#: src/backends/meta-input-settings.c:2423
+#: src/backends/meta-input-settings.c:2532
 #, c-format
 msgid "Mode Switch (Group %d)"
 msgstr "模式切換( 群組 %d)"
@@ -507,121 +543,124 @@ msgstr "模式切換( 群組 %d)"
 #. TRANSLATORS: This string refers to an action, cycles drawing tablets'
 #. * mapping through the available outputs.
 #.
-#: src/backends/meta-input-settings.c:2446
+#: src/backends/meta-input-settings.c:2555
 msgid "Switch monitor"
 msgstr "切換螢幕"
 
-#: src/backends/meta-input-settings.c:2448
+#: src/backends/meta-input-settings.c:2557
 msgid "Show on-screen help"
 msgstr "顯示螢幕求助"
 
-#: src/backends/meta-monitor-manager.c:954
+#: src/backends/meta-monitor.c:223
 msgid "Built-in display"
 msgstr "內建顯示"
 
-#: src/backends/meta-monitor-manager.c:986
+#: src/backends/meta-monitor.c:252
 msgid "Unknown"
 msgstr "不明"
 
-#: src/backends/meta-monitor-manager.c:988
+#: src/backends/meta-monitor.c:254
 msgid "Unknown Display"
 msgstr "不明的顯示器"
 
-#: src/backends/meta-monitor-manager.c:996
+#: src/backends/meta-monitor.c:262
 #, c-format
-#| msgid "%s %s"
 msgctxt ""
 "This is a monitor vendor name, followed by a size in inches, like 'Dell 15\"'"
 msgid "%s %s"
 msgstr "%s %s"
 
-#: src/backends/meta-monitor-manager.c:1004
+#: src/backends/meta-monitor.c:270
 #, c-format
-#| msgid "%s %s"
 msgctxt ""
 "This is a monitor vendor name followed by product/model name where size in "
 "inches could not be calculated, e.g. Dell U2414H"
 msgid "%s %s"
 msgstr "%s %s"
 
+#. Translators: this string will appear in Sysprof
+#: src/backends/meta-profiler.c:82
+msgid "Compositor"
+msgstr "合成器"
+
 # FIXME: I'm still unclear about the meaning of XGetSelectionOwner -- Abel
 #. This probably means that a non-WM compositor like xcompmgr is running;
 #. * we have no way to get it to exit
-#: src/compositor/compositor.c:482
+#: src/compositor/compositor.c:509
 #, c-format
 msgid ""
 "Another compositing manager is already running on screen %i on display “%s”."
 msgstr "在畫面「%2$s」中的第 %1$i 個螢幕中已啟動另一個組合視窗管理員。"
 
-#: src/core/bell.c:252
+#: src/core/bell.c:192
 msgid "Bell event"
 msgstr "響鈴事件"
 
-#: src/core/main.c:185
+#: src/core/main.c:190
 msgid "Disable connection to session manager"
 msgstr "停用到作業階段管理員的連線"
 
-#: src/core/main.c:191
+#: src/core/main.c:196
 msgid "Replace the running window manager"
 msgstr "取代執行中的視窗管理員"
 
-#: src/core/main.c:197
+#: src/core/main.c:202
 msgid "Specify session management ID"
 msgstr "指定作業階段管理 ID"
 
-#: src/core/main.c:202
+#: src/core/main.c:207
 msgid "X Display to use"
 msgstr "使用的 X 畫面"
 
-#: src/core/main.c:208
+#: src/core/main.c:213
 msgid "Initialize session from savefile"
 msgstr "以 savefile 初始化作業階段"
 
-#: src/core/main.c:214
+#: src/core/main.c:219
 msgid "Make X calls synchronous"
 msgstr "使用同步方式調用 X 函式"
 
-#: src/core/main.c:221
+#: src/core/main.c:226
 msgid "Run as a wayland compositor"
 msgstr "以 wayland 組合器執行"
 
-#: src/core/main.c:227
+#: src/core/main.c:232
 msgid "Run as a nested compositor"
 msgstr "以巢狀組合器執行"
 
-#: src/core/main.c:233
+#: src/core/main.c:238
 msgid "Run wayland compositor without starting Xwayland"
 msgstr "在不啟動 Xwayland 的情況下開啟 Wayland 合成器"
 
-#: src/core/main.c:241
+#: src/core/main.c:246
 msgid "Run as a full display server, rather than nested"
 msgstr "以完全顯示伺服器執行，而非巢狀"
 
-#: src/core/main.c:247
+#: src/core/main.c:252
 msgid "Run with X11 backend"
 msgstr "透過 X11 後端執行"
 
 #. Translators: %s is a window title
-#: src/core/meta-close-dialog-default.c:150
+#: src/core/meta-close-dialog-default.c:151
 #, c-format
 msgid "“%s” is not responding."
 msgstr "「%s」沒有回應。"
 
-#: src/core/meta-close-dialog-default.c:152
+#: src/core/meta-close-dialog-default.c:153
 msgid "Application is not responding."
 msgstr "應用程式沒有回應。"
 
-#: src/core/meta-close-dialog-default.c:157
+#: src/core/meta-close-dialog-default.c:158
 msgid ""
 "You may choose to wait a short while for it to continue or force the "
 "application to quit entirely."
 msgstr "您可以選擇稍等一下讓它繼續，或者強制完全退出程式。"
 
-#: src/core/meta-close-dialog-default.c:164
+#: src/core/meta-close-dialog-default.c:165
 msgid "_Force Quit"
 msgstr "強制退出(_F)"
 
-#: src/core/meta-close-dialog-default.c:164
+#: src/core/meta-close-dialog-default.c:165
 msgid "_Wait"
 msgstr "等待(_W)"
 
@@ -648,21 +687,21 @@ msgid "Mutter plugin to use"
 msgstr "要使用的 Mutter 外掛程式"
 
 # (Abel) take care of the same string in libwnck
-#: src/core/prefs.c:1786
+#: src/core/prefs.c:1849
 #, c-format
 msgid "Workspace %d"
 msgstr "工作區 %d"
 
-#: src/core/util.c:121
+#: src/core/util.c:122
 msgid "Mutter was compiled without support for verbose mode\n"
 msgstr "編譯 Mutter 時並沒有加入詳細偵錯模式的支援\n"
 
-#: src/wayland/meta-wayland-tablet-pad.c:567
+#: src/wayland/meta-wayland-tablet-pad.c:568
 #, c-format
 msgid "Mode Switch: Mode %d"
 msgstr "模式切換：模式 %d"
 
-#: src/x11/meta-x11-display.c:666
+#: src/x11/meta-x11-display.c:679
 #, c-format
 msgid ""
 "Display “%s” already has a window manager; try using the --replace option to "
@@ -671,27 +710,32 @@ msgstr ""
 "畫面「%s」已經有了視窗管理員；請嘗試使用 --replace 選項來替換目前的視窗管理"
 "員。"
 
-#: src/x11/meta-x11-display.c:1008
+#: src/x11/meta-x11-display.c:1040
 msgid "Failed to initialize GDK\n"
 msgstr "無法初始化 GDK\n"
 
-#: src/x11/meta-x11-display.c:1032
+#: src/x11/meta-x11-display.c:1064
 #, c-format
 msgid "Failed to open X Window System display “%s”\n"
 msgstr "無法開啟 X Window 系統畫面「%s」\n"
 
-#: src/x11/meta-x11-display.c:1115
+#: src/x11/meta-x11-display.c:1147
 #, c-format
 msgid "Screen %d on display “%s” is invalid\n"
 msgstr "畫面「%2$s」中的第 %1$d 個螢幕無效\n"
 
+#: src/x11/meta-x11-selection-input-stream.c:445
+#, c-format
+msgid "Format %s not supported"
+msgstr "不支援 %s 格式"
+
 #: src/x11/session.c:1821
 msgid ""
 "These windows do not support “save current setup” and will have to be "
 "restarted manually next time you log in."
 msgstr "這些視窗不支援「儲存目前的設定」，必須在下次登入後自行啟動。"
 
-#: src/x11/window-props.c:568
+#: src/x11/window-props.c:569
 #, c-format
 msgid "%s (on %s)"
 msgstr "%s（在 %s）"
-- 
2.25.1


From c3d2f3f39976e1aab3481ecc6e505f114d3babd3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@gnome.org>
Date: Mon, 3 Feb 2020 22:58:38 +0100
Subject: [PATCH 2/7] window: Ignore requests to be placed on non-existent
 workspaces

When an X11 window requests an initial workspace, we currently trust
it that the workspace actually exists. However dynamic workspaces
make this easy to get wrong for applications: They make it likely
for the number of workspaces to change between application starts,
and if the app blindly applies its saved state on startup, it will
trigger an assertion.

Make sure that we pass valid parameters to set_workspace_state(),
and simply let the workspace assignment fall through to the default
handling otherwise.

https://gitlab.gnome.org/GNOME/mutter/issues/1029
---
 src/core/window.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/core/window.c b/src/core/window.c
index ac8187978..a64ccb011 100644
--- a/src/core/window.c
+++ b/src/core/window.c
@@ -1289,7 +1289,10 @@ _meta_window_shared_new (MetaDisplay         *display,
                                                                      window->initial_workspace);
         }
 
-      set_workspace_state (window, on_all_workspaces, workspace);
+      /* Ignore when a window requests to be placed on a non-existent workspace
+       */
+      if (on_all_workspaces || workspace != NULL)
+        set_workspace_state (window, on_all_workspaces, workspace);
     }
 
   /* override-redirect windows are subtly different from other windows
-- 
2.25.1


From 011ff15603d6f1a25e7b4bb79bfc2bcdcef486e5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20=C3=85dahl?= <jadahl@gmail.com>
Date: Tue, 18 Feb 2020 23:01:28 +0100
Subject: [PATCH 3/7] window-actor: Don't show actor until
 meta_window_actor_show()

By default clutter will show an actor as it is added to a parent. This
means that after we create the window actor, when it's added to the
window group, we implicitly show it. What we really want is to not show
it until the window is supposed to be shown, which happens when
meta_window_actor_show() is called, as showing prior to that, could
cause issues.

Avoid the implicit show by setting the "show-on-set-parent" property on
the window actor to `FALSE` on window actor construction.

https://gitlab.gnome.org/GNOME/mutter/merge_requests/1066
---
 src/compositor/compositor.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/compositor/compositor.c b/src/compositor/compositor.c
index d4b6d14c3..32e1aae1a 100644
--- a/src/compositor/compositor.c
+++ b/src/compositor/compositor.c
@@ -607,6 +607,7 @@ meta_compositor_add_window (MetaCompositor    *compositor,
 
   window_actor = g_object_new (window_actor_type,
                                "meta-window", window,
+                               "show-on-set-parent", FALSE,
                                NULL);
 
   if (window->layer == META_LAYER_OVERRIDE_REDIRECT)
-- 
2.25.1


From c65db40178e0a729ef993972915d97ffc961f613 Mon Sep 17 00:00:00 2001
From: Olivier Fourdan <ofourdan@redhat.com>
Date: Thu, 20 Feb 2020 19:02:40 +0100
Subject: [PATCH 4/7] wayland/data-device: Check resource version on cancel

For clarity, check the resource version needs the "cancelled" message in
the actual vmethod rather than from the caller function.

https://gitlab.gnome.org/GNOME/mutter/merge_requests/1073

(cherry picked from commit 963108a9a6a0a3a811945da5354eafe0b86ffde2)
---
 src/wayland/meta-wayland-data-device.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/src/wayland/meta-wayland-data-device.c b/src/wayland/meta-wayland-data-device.c
index f12facef3..144751fa8 100644
--- a/src/wayland/meta-wayland-data-device.c
+++ b/src/wayland/meta-wayland-data-device.c
@@ -608,11 +608,7 @@ destroy_data_offer (struct wl_resource *resource)
               if (wl_resource_get_version (offer->resource) <
                   WL_DATA_OFFER_ACTION_SINCE_VERSION)
                 meta_wayland_data_source_notify_finish (offer->source);
-              else if (meta_wayland_data_source_get_drop_performed (offer->source) &&
-                       meta_wayland_data_source_get_resource(offer->source) &&
-                       wl_resource_get_version(
-                       meta_wayland_data_source_get_resource(offer->source)) >=
-                       WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION)
+              else if (meta_wayland_data_source_get_drop_performed (offer->source))
                 meta_wayland_source_cancel (offer->source);
             }
           else
@@ -1388,7 +1384,10 @@ meta_wayland_source_cancel (MetaWaylandDataSource *source)
   MetaWaylandDataSourcePrivate *priv =
     meta_wayland_data_source_get_instance_private (source);
 
-  if (priv->resource)
+  if (!priv->resource)
+    return;
+
+  if (wl_resource_get_version(priv->resource) >= WL_DATA_SOURCE_DND_FINISHED_SINCE_VERSION)
     wl_data_source_send_cancelled (priv->resource);
 }
 
-- 
2.25.1


From 2709a4ffb19878cdaf5d001a7be5e717c17bf607 Mon Sep 17 00:00:00 2001
From: Olivier Fourdan <ofourdan@redhat.com>
Date: Thu, 20 Feb 2020 10:25:46 +0100
Subject: [PATCH 5/7] wayland/data-device: Fix crash with offer from X11 client

If a data offer comes from an X11 client, the Wayland resource would be
NULL, causing a crash in `data_offer_choose_action()` trying to get the
resource version.

So instead of doing the version check in `data_offer_choose_action()`,
do it early when creating the data source.

Closes: https://gitlab.gnome.org/GNOME/mutter/issues/1057
https://gitlab.gnome.org/GNOME/mutter/merge_requests/1073

(cherry picked from commit f9326cfa3d5f0fd9f63f561d6dfbb92a8f6fb34a)
---
 src/wayland/meta-wayland-data-device.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/wayland/meta-wayland-data-device.c b/src/wayland/meta-wayland-data-device.c
index 144751fa8..b289bc9bf 100644
--- a/src/wayland/meta-wayland-data-device.c
+++ b/src/wayland/meta-wayland-data-device.c
@@ -143,16 +143,8 @@ data_offer_choose_action (MetaWaylandDataOffer *offer)
       WL_DATA_OFFER_ACTION_SINCE_VERSION)
     return WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY;
 
-  if (wl_resource_get_version (meta_wayland_data_source_get_resource (source)) <
-      WL_DATA_SOURCE_ACTION_SINCE_VERSION)
-    {
-      actions = user_action = WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY;
-    }
-  else
-    {
-      actions = meta_wayland_data_source_get_actions (source);
-      user_action = meta_wayland_data_source_get_user_action (source);
-    }
+  actions = meta_wayland_data_source_get_actions (source);
+  user_action = meta_wayland_data_source_get_user_action (source);
 
   available_actions = actions & offer->dnd_actions;
 
@@ -2187,11 +2179,19 @@ meta_wayland_data_source_new (struct wl_resource *resource)
 {
   MetaWaylandDataSource *source =
    g_object_new (META_TYPE_WAYLAND_DATA_SOURCE, NULL);
+  MetaWaylandDataSourcePrivate *priv =
+    meta_wayland_data_source_get_instance_private (source);
 
   meta_wayland_data_source_set_resource (source, resource);
   wl_resource_set_implementation (resource, &data_source_interface,
                                   source, destroy_data_source);
 
+  if (wl_resource_get_version (resource) < WL_DATA_SOURCE_ACTION_SINCE_VERSION)
+    {
+      priv->dnd_actions = priv->user_dnd_action =
+        WL_DATA_DEVICE_MANAGER_DND_ACTION_COPY;
+    }
+
   return source;
 }
 
-- 
2.25.1


From 11da42b2f8ff87dbf9007c83cdbc8b6b71456f27 Mon Sep 17 00:00:00 2001
From: Pekka Paalanen <pekka.paalanen@collabora.com>
Date: Mon, 24 Feb 2020 15:13:42 +0200
Subject: [PATCH 6/7] cursor-renderer/native: Refactor init to per-gpu

Extract the code to initialize a single GPU cursor support into its own
function. The new function will be used by GPU hotplug in the future.

This is a pure refactoring without any behavioral changes.

https://gitlab.gnome.org/GNOME/mutter/merge_requests/1097

Backported from 4cc29cfb619102a8e7cd32731205c8018d83544e.
---
 .../native/meta-cursor-renderer-native.c      | 53 +++++++++++--------
 1 file changed, 30 insertions(+), 23 deletions(-)

diff --git a/src/backends/native/meta-cursor-renderer-native.c b/src/backends/native/meta-cursor-renderer-native.c
index e4b88e0c7..6c53a2a8b 100644
--- a/src/backends/native/meta-cursor-renderer-native.c
+++ b/src/backends/native/meta-cursor-renderer-native.c
@@ -1176,6 +1176,35 @@ on_monitors_changed (MetaMonitorManager       *monitors,
   force_update_hw_cursor (native);
 }
 
+static void
+init_hw_cursor_support_for_gpu (MetaGpuKms *gpu_kms)
+{
+  MetaCursorRendererNativeGpuData *cursor_renderer_gpu_data;
+  int kms_fd;
+  struct gbm_device *gbm_device;
+  uint64_t width, height;
+
+  gbm_device = meta_gbm_device_from_gpu (gpu_kms);
+  if (!gbm_device)
+    return;
+
+  cursor_renderer_gpu_data =
+    meta_create_cursor_renderer_native_gpu_data (gpu_kms);
+
+  kms_fd = meta_gpu_kms_get_fd (gpu_kms);
+  if (drmGetCap (kms_fd, DRM_CAP_CURSOR_WIDTH, &width) == 0 &&
+      drmGetCap (kms_fd, DRM_CAP_CURSOR_HEIGHT, &height) == 0)
+    {
+      cursor_renderer_gpu_data->cursor_width = width;
+      cursor_renderer_gpu_data->cursor_height = height;
+    }
+  else
+    {
+      cursor_renderer_gpu_data->cursor_width = 64;
+      cursor_renderer_gpu_data->cursor_height = 64;
+    }
+}
+
 static void
 init_hw_cursor_support (MetaCursorRendererNative *cursor_renderer_native)
 {
@@ -1188,30 +1217,8 @@ init_hw_cursor_support (MetaCursorRendererNative *cursor_renderer_native)
   for (l = gpus; l; l = l->next)
     {
       MetaGpuKms *gpu_kms = l->data;
-      MetaCursorRendererNativeGpuData *cursor_renderer_gpu_data;
-      int kms_fd;
-      struct gbm_device *gbm_device;
-      uint64_t width, height;
-
-      gbm_device = meta_gbm_device_from_gpu (gpu_kms);
-      if (!gbm_device)
-        continue;
 
-      cursor_renderer_gpu_data =
-        meta_create_cursor_renderer_native_gpu_data (gpu_kms);
-
-      kms_fd = meta_gpu_kms_get_fd (gpu_kms);
-      if (drmGetCap (kms_fd, DRM_CAP_CURSOR_WIDTH, &width) == 0 &&
-          drmGetCap (kms_fd, DRM_CAP_CURSOR_HEIGHT, &height) == 0)
-        {
-          cursor_renderer_gpu_data->cursor_width = width;
-          cursor_renderer_gpu_data->cursor_height = height;
-        }
-      else
-        {
-          cursor_renderer_gpu_data->cursor_width = 64;
-          cursor_renderer_gpu_data->cursor_height = 64;
-        }
+      init_hw_cursor_support_for_gpu (gpu_kms);
     }
 }
 
-- 
2.25.1


From a5b5e95ad948e6cf7aafded66040bb35c156d617 Mon Sep 17 00:00:00 2001
From: Pekka Paalanen <pekka.paalanen@collabora.com>
Date: Mon, 24 Feb 2020 15:36:24 +0200
Subject: [PATCH 7/7] cursor-renderer/native: Handle GPU hotplug

Listen for GPU hotplug events to initialize their cursor support.

This fixes one reason for why DisplayLink devices may not be using a hardware
cursor. Particularly, when a DisplayLink device is hotplugged for the first
time such that EVDI creates a new DRM device node after gnome-shell has already
started, we used to forget to initialize the cursor support.

https://gitlab.gnome.org/GNOME/mutter/merge_requests/1097
(cherry picked from commit 8abdf16a3992e3332f2378ea7c65e6e251e418e0)
---
 src/backends/native/meta-cursor-renderer-native.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/backends/native/meta-cursor-renderer-native.c b/src/backends/native/meta-cursor-renderer-native.c
index 6c53a2a8b..b14574c01 100644
--- a/src/backends/native/meta-cursor-renderer-native.c
+++ b/src/backends/native/meta-cursor-renderer-native.c
@@ -2,6 +2,7 @@
 
 /*
  * Copyright (C) 2014 Red Hat
+ * Copyright 2020 DisplayLink (UK) Ltd.
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License as
@@ -1205,6 +1206,13 @@ init_hw_cursor_support_for_gpu (MetaGpuKms *gpu_kms)
     }
 }
 
+static void
+on_gpu_added_for_cursor (MetaBackend *backend,
+                         MetaGpuKms  *gpu_kms)
+{
+  init_hw_cursor_support_for_gpu (gpu_kms);
+}
+
 static void
 init_hw_cursor_support (MetaCursorRendererNative *cursor_renderer_native)
 {
@@ -1238,6 +1246,8 @@ meta_cursor_renderer_native_new (MetaBackend *backend)
   g_signal_connect_object (monitor_manager, "monitors-changed-internal",
                            G_CALLBACK (on_monitors_changed),
                            cursor_renderer_native, 0);
+  g_signal_connect (backend, "gpu-added",
+                    G_CALLBACK (on_gpu_added_for_cursor), NULL);
 
   priv->backend = backend;
   priv->hw_state_invalidated = TRUE;
-- 
2.25.1

