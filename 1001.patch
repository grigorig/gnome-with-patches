diff --git a/src/core/display.c b/src/core/display.c
index 8a6d6944095f6c7ed8b59876cfc0982d5fc2249c..80a325125c6016c06f37f48c752f921541ba8a1c 100644
--- a/src/core/display.c
+++ b/src/core/display.c
@@ -1022,6 +1022,7 @@ meta_display_close (MetaDisplay *display,
   g_clear_object (&display->sound_player);
 
   meta_clipboard_manager_shutdown (display);
+  g_clear_object (&display->selection);
 
   g_object_unref (display);
   the_display = NULL;
diff --git a/src/core/meta-clipboard-manager.c b/src/core/meta-clipboard-manager.c
index 1c1b587fe20a783e241d9e440495a27848cc299c..ceb144469a1ba5c3a47bd587005a33831d2bf676 100644
--- a/src/core/meta-clipboard-manager.c
+++ b/src/core/meta-clipboard-manager.c
@@ -122,13 +122,17 @@ owner_changed_cb (MetaSelection       *selection,
         }
 
       if (best_idx < 0)
-        return;
+        {
+          g_list_free_full (mimetypes, g_free);
+          return;
+        }
 
       display->saved_clipboard_mimetype = g_strdup (best);
+      g_list_free_full (mimetypes, g_free);
       output = g_memory_output_stream_new_resizable ();
       meta_selection_transfer_async (selection,
                                      META_SELECTION_CLIPBOARD,
-                                     best,
+                                     display->saved_clipboard_mimetype,
                                      transfer_size,
                                      output,
                                      NULL,
diff --git a/src/core/meta-selection-source-memory.c b/src/core/meta-selection-source-memory.c
index c8b0c83f51f1a01143b538dc7adf45c44c4ce3b4..a52f50861e169c3a72710161aa73157034197753 100644
--- a/src/core/meta-selection-source-memory.c
+++ b/src/core/meta-selection-source-memory.c
@@ -43,7 +43,7 @@ meta_selection_source_memory_read_async (MetaSelectionSource *source,
 {
   MetaSelectionSourceMemory *source_mem = META_SELECTION_SOURCE_MEMORY (source);
   GInputStream *stream;
-  GTask *task;
+  g_autoptr (GTask) task = NULL;
 
   if (g_strcmp0 (mimetype, source_mem->mimetype) != 0)
     {
diff --git a/src/core/meta-selection.c b/src/core/meta-selection.c
index 504d322e78e6fa70ad3d2f3436c638947beb027f..7e86c5269f0badad5f862ba9e692b2415002c1e5 100644
--- a/src/core/meta-selection.c
+++ b/src/core/meta-selection.c
@@ -50,9 +50,27 @@ static guint signals[N_SIGNALS] = { 0 };
 
 G_DEFINE_TYPE (MetaSelection, meta_selection, G_TYPE_OBJECT)
 
+static void
+meta_selection_dispose (GObject *object)
+{
+  MetaSelection *selection = META_SELECTION (object);
+  guint i;
+
+  for (i = 0; i < META_N_SELECTION_TYPES; i++)
+    {
+      g_clear_object (&selection->owners[i]);
+    }
+
+  G_OBJECT_CLASS (meta_selection_parent_class)->dispose (object);
+}
+
 static void
 meta_selection_class_init (MetaSelectionClass *klass)
 {
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  object_class->dispose = meta_selection_dispose;
+
   signals[OWNER_CHANGED] =
     g_signal_new ("owner-changed",
                   G_TYPE_FROM_CLASS (klass),
@@ -252,6 +270,7 @@ source_read_cb (MetaSelectionSource *source,
   if (!stream)
     {
       g_task_return_error (task, error);
+      g_object_unref (task);
       return;
     }
 
diff --git a/src/x11/meta-selection-source-x11.c b/src/x11/meta-selection-source-x11.c
index 55e50032797527df9ecd6bae5a689bad2884b8fd..c9fc8fbc6c67ed4a7d6e07af53cf40fdbb66c605 100644
--- a/src/x11/meta-selection-source-x11.c
+++ b/src/x11/meta-selection-source-x11.c
@@ -190,6 +190,7 @@ read_mimetypes_cb (GInputStream *stream,
     {
       g_task_return_error (task, error);
       g_object_unref (task);
+      g_object_unref (stream);
       return;
     }
 
diff --git a/src/x11/meta-x11-selection-output-stream.c b/src/x11/meta-x11-selection-output-stream.c
index 86615364ab998f763c949e3356c7a7838a1ee1d2..1883bc92a3e840430e46ebbfada437d70709fe63 100644
--- a/src/x11/meta-x11-selection-output-stream.c
+++ b/src/x11/meta-x11-selection-output-stream.c
@@ -37,13 +37,9 @@ struct _MetaX11SelectionOutputStreamPrivate
 {
   MetaX11Display *x11_display;
   Window xwindow;
-  char *selection;
   Atom xselection;
-  char *target;
   Atom xtarget;
-  char *property;
   Atom xproperty;
-  const char *type;
   Atom xtype;
   int format;
   gulong timestamp;
@@ -515,10 +511,6 @@ meta_x11_selection_output_stream_finalize (GObject *object)
   g_cond_clear (&priv->cond);
   g_mutex_clear (&priv->mutex);
 
-  g_free (priv->selection);
-  g_free (priv->target);
-  g_free (priv->property);
-
   G_OBJECT_CLASS (meta_x11_selection_output_stream_parent_class)->finalize (object);
 }
 
@@ -606,14 +598,10 @@ meta_x11_selection_output_stream_new (MetaX11Display *x11_display,
 
   priv->x11_display = x11_display;
   priv->xwindow = requestor;
-  priv->selection = g_strdup (selection);
-  priv->xselection = XInternAtom (x11_display->xdisplay, priv->selection, False);
-  priv->target = g_strdup (target);
-  priv->xtarget = XInternAtom (x11_display->xdisplay, priv->target, False);
-  priv->property = g_strdup (property);
-  priv->xproperty = XInternAtom (x11_display->xdisplay, priv->property, False);
-  priv->type = g_strdup (type);
-  priv->xtype = XInternAtom (x11_display->xdisplay, priv->type, False);
+  priv->xselection = XInternAtom (x11_display->xdisplay, selection, False);
+  priv->xtarget = XInternAtom (x11_display->xdisplay, target, False);
+  priv->xproperty = XInternAtom (x11_display->xdisplay, property, False);
+  priv->xtype = XInternAtom (x11_display->xdisplay, type, False);
   priv->format = format;
   priv->timestamp = timestamp;
 
diff --git a/src/x11/meta-x11-selection.c b/src/x11/meta-x11-selection.c
index 17b0c1e29de25dce543eb0d7bf9b7c9cf65a638d..a93fa1585f6e0780690cfc75c8b283c6cd1f827a 100644
--- a/src/x11/meta-x11-selection.c
+++ b/src/x11/meta-x11-selection.c
@@ -298,6 +298,7 @@ source_new_cb (GObject      *object,
     {
       meta_selection_set_owner (selection, selection_type, source);
       g_set_object (&x11_display->selection.owners[selection_type], source);
+      g_object_unref (source);
     }
   else if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
     {
@@ -441,10 +442,22 @@ void
 meta_x11_selection_shutdown (MetaX11Display *x11_display)
 {
   MetaDisplay *display = meta_get_display ();
+  guint i;
 
   g_signal_handlers_disconnect_by_func (meta_display_get_selection (display),
                                         owner_changed_cb,
                                         x11_display);
+
+  for (i = 0; i < META_N_SELECTION_TYPES; i++)
+    {
+      g_clear_object (&x11_display->selection.owners[i]);
+      if (x11_display->selection.cancellables[i])
+        {
+          g_cancellable_cancel (x11_display->selection.cancellables[i]);
+          g_clear_object (&x11_display->selection.cancellables[i]);
+        }
+    }
+
   if (x11_display->selection.xwindow != None)
     {
       XDestroyWindow (x11_display->xdisplay, x11_display->selection.xwindow);
