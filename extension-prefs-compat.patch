From 7b75e9f5ed9bdd8f05ab15de11bf08f6c0fe9b7e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@gnome.org>
Date: Fri, 10 Apr 2020 04:27:31 +0200
Subject: [PATCH 1/2] extensions-app: Rename executable

We kept the old binary name when overhauling the tool for the Extensions
app to avoid unnecessary churn for packagers/distributors.

However we now have a reason to "free" the old name, so rename the binary
to match the (sub)project name.

https://gitlab.gnome.org/GNOME/gnome-shell/-/merge_requests/1220
---
 .../extensions-app/build-aux/flatpak/org.gnome.Extensions.json  | 2 +-
 .../{gnome-shell-extension-prefs.in => gnome-extensions-app.in} | 0
 subprojects/extensions-app/js/main.js                           | 2 +-
 subprojects/extensions-app/meson.build                          | 2 +-
 4 files changed, 3 insertions(+), 3 deletions(-)
 rename subprojects/extensions-app/js/{gnome-shell-extension-prefs.in => gnome-extensions-app.in} (100%)

diff --git a/subprojects/extensions-app/build-aux/flatpak/org.gnome.Extensions.json b/subprojects/extensions-app/build-aux/flatpak/org.gnome.Extensions.json
index c51850f72..4542732ac 100644
--- a/subprojects/extensions-app/build-aux/flatpak/org.gnome.Extensions.json
+++ b/subprojects/extensions-app/build-aux/flatpak/org.gnome.Extensions.json
@@ -3,7 +3,7 @@
   "runtime": "org.gnome.Platform",
   "runtime-version": "master",
   "sdk": "org.gnome.Sdk",
-  "command": "gnome-shell-extension-prefs",
+  "command": "gnome-extensions-app",
   "tags": ["nightly"],
   "desktop-file-name-prefix": "(Nightly) ",
   "finish-args": [
diff --git a/subprojects/extensions-app/js/gnome-shell-extension-prefs.in b/subprojects/extensions-app/js/gnome-extensions-app.in
similarity index 100%
rename from subprojects/extensions-app/js/gnome-shell-extension-prefs.in
rename to subprojects/extensions-app/js/gnome-extensions-app.in
diff --git a/subprojects/extensions-app/js/main.js b/subprojects/extensions-app/js/main.js
index d25df9c57..8b47c7b03 100644
--- a/subprojects/extensions-app/js/main.js
+++ b/subprojects/extensions-app/js/main.js
@@ -39,7 +39,7 @@ function toggleState(action) {
 var Application = GObject.registerClass(
 class Application extends Gtk.Application {
     _init() {
-        GLib.set_prgname('gnome-shell-extension-prefs');
+        GLib.set_prgname('gnome-extensions-app');
         super._init({ application_id: 'org.gnome.Extensions' });
     }
 
diff --git a/subprojects/extensions-app/meson.build b/subprojects/extensions-app/meson.build
index 20f938fb0..7596f35f5 100644
--- a/subprojects/extensions-app/meson.build
+++ b/subprojects/extensions-app/meson.build
@@ -5,7 +5,7 @@ project('gnome-extensions-app',
 )
 
 app_id = 'org.gnome.Extensions'
-prgname = 'gnome-shell-extension-prefs'
+prgname = 'gnome-extensions-app'
 
 gnome = import('gnome')
 i18n  = import('i18n')
-- 
2.26.2


From 1d3c1b1ee3e6ea9379f497a00ec357ce0c67b8df Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@gnome.org>
Date: Mon, 27 Apr 2020 21:57:33 +0200
Subject: [PATCH 2/2] Add small gnome-shell-extension-prefs script

Commit d76162c1c047c removed the ability to pass an extension UUID to
the Extensions app, when we moved the dialog to a portal and made
gnome-shell use it instead of spawning the extensions app.

However that missed that many extensions called out to the app to
open their own prefs.

While extensions are encouraged to switch to the new openPrefs()
convenience method added in commit 8030d9ad323e, restore the old
behavior with a small script under the old gnome-shell-extension-prefs
name that either calls out to the portal or launches the app.

https://gitlab.gnome.org/GNOME/gnome-shell/-/merge_requests/1220
---
 src/gnome-shell-extension-prefs | 31 +++++++++++++++++++++++++++++++
 src/meson.build                 |  4 ++++
 3 files changed, 35 insertions(+), 1 deletion(-)
 create mode 100755 src/gnome-shell-extension-prefs

diff --git a/src/gnome-shell-extension-prefs b/src/gnome-shell-extension-prefs
new file mode 100755
index 000000000..303b1963c
--- /dev/null
+++ b/src/gnome-shell-extension-prefs
@@ -0,0 +1,31 @@
+#!/bin/sh
+
+openPrefs() {
+  if [ "$(which gnome-extensions)" ]
+  then
+    gnome-extensions prefs $1
+  else
+    gdbus call --session \
+      --dest=org.gnome.Shell.Extensions \
+      --object-path=/org/gnome/Shell/Extensions \
+      --method=org.gnome.Shell.Extensions.OpenExtensionPrefs $1 '' '{}'
+  fi
+}
+
+cat >&2 <<EOT
+gnome-shell-extension-prefs is deprecated
+
+Install https://flathub.org/apps/details/org.gnome.Extensions for extension
+management, or use the gnome-extensions command line tool.
+
+Extensions can use the ExtensionUtils.openPrefs() method.
+EOT
+
+UUID=$1
+
+if [ "$UUID" ]
+then
+  openPrefs $UUID
+else
+  gapplication launch org.gnome.Extensions
+fi
diff --git a/src/meson.build b/src/meson.build
index 46680d5b4..546d3a64b 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -31,6 +31,10 @@ foreach tool : script_tools
   )
 endforeach
 
+install_data('gnome-shell-extension-prefs',
+  install_dir: bindir
+)
+
 gnome_shell_cflags = [
   '-DCLUTTER_ENABLE_EXPERIMENTAL_API',
   '-DCOGL_ENABLE_EXPERIMENTAL_API',
-- 
2.26.2

